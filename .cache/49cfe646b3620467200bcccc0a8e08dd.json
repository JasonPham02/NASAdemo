{"dependencies":[{"name":"/Users/jasonpham/VS_CODE_LOCAL/Learn JAVASCRIPT/will-it-miss/package.json","includedInParent":true,"mtime":1688934767535},{"name":"/Users/jasonpham/VS_CODE_LOCAL/Learn JAVASCRIPT/will-it-miss/node_modules/date-fns/esm/isValid/package.json","includedInParent":true,"mtime":1688934376122},{"name":"../isDate/index.js","loc":{"line":1,"column":19}},{"name":"../toDate/index.js","loc":{"line":2,"column":19}},{"name":"../_lib/requiredArgs/index.js","loc":{"line":3,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValid;\n\nvar _index = require(\"../isDate/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require(\"../toDate/index.js\");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid(dirtyDate) {\n  (0, _index6.default)(1, arguments);\n  if (!(0, _index2.default)(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = (0, _index4.default)(dirtyDate);\n  return !isNaN(Number(date));\n}","map":{"mappings":[{"name":"isValid","generated":{"line":6,"column":18},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":35,"column":24}},{"generated":{"line":8,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":2,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":4,"column":0}},{"generated":{"line":53,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":35,"column":15}},{"name":"isValid","generated":{"line":53,"column":9},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":35,"column":24}},{"generated":{"line":53,"column":16},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":35,"column":15}},{"name":"dirtyDate","generated":{"line":53,"column":17},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":35,"column":32}},{"generated":{"line":53,"column":26},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":35,"column":15}},{"generated":{"line":53,"column":28},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":35,"column":43}},{"generated":{"line":54,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":2}},{"generated":{"line":54,"column":23},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":15}},{"generated":{"line":54,"column":24},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":2}},{"name":"arguments","generated":{"line":54,"column":26},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":18}},{"generated":{"line":54,"column":35},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":2}},{"generated":{"line":55,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":2}},{"generated":{"line":55,"column":6},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":6}},{"generated":{"line":55,"column":7},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":7}},{"name":"dirtyDate","generated":{"line":55,"column":28},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":14}},{"generated":{"line":55,"column":37},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":7}},{"generated":{"line":55,"column":38},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":6}},{"generated":{"line":55,"column":42},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":28}},{"name":"dirtyDate","generated":{"line":55,"column":49},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":35}},{"generated":{"line":55,"column":58},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":28}},{"generated":{"line":55,"column":63},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":49}},{"generated":{"line":55,"column":71},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":2}},{"generated":{"line":55,"column":73},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":59}},{"generated":{"line":56,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":4}},{"generated":{"line":56,"column":11},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":11}},{"generated":{"line":56,"column":16},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":4}},{"generated":{"line":57,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":3}},{"generated":{"line":58,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":2}},{"name":"date","generated":{"line":58,"column":6},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":6}},{"generated":{"line":58,"column":13},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":13}},{"name":"dirtyDate","generated":{"line":58,"column":34},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":20}},{"generated":{"line":58,"column":43},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":13}},{"generated":{"line":58,"column":44},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":2}},{"generated":{"line":59,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":41,"column":2}},{"generated":{"line":59,"column":9},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":41,"column":9}},{"name":"isNaN","generated":{"line":59,"column":10},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":41,"column":10}},{"name":"Number","generated":{"line":59,"column":16},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":41,"column":16}},{"name":"date","generated":{"line":59,"column":23},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":41,"column":23}},{"generated":{"line":59,"column":27},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":41,"column":16}},{"generated":{"line":59,"column":28},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":41,"column":10}},{"generated":{"line":59,"column":29},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":41,"column":2}},{"generated":{"line":60,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":1}}],"sources":{"../node_modules/date-fns/esm/isValid/index.js":"import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}"},"lineCount":null}},"hash":"3f29abb681037c1eb32d3c118839d4af","cacheData":{"env":{}}}